#!/usr/bin/env perl
use strict;
use warnings;
use File::Basename;
use File::Spec;
use lib File::Spec->catdir(dirname(__FILE__), '../lib');

use Cache::FileCache;
use Getopt::Long;
use MetaKGS::Upstream;
use Plack::Builder;
use Plack::Loader;
use HTTP::Status qw/HTTP_GATEWAY_TIMEOUT HTTP_BAD_GATEWAY/;

my $cache = Cache::FileCache->new({
    namespace          => 'www.gokgs.com',
    default_expires_in => '1 hour',
    auto_purge_on_get  => 1,
});

warn $cache->get_cache_root;

my $app = builder {
    enable 'Cached',
           cache => $cache,
           set => sub {
               my $res = shift;

               return if $res->[0] == HTTP_GATEWAY_TIMEOUT;
               return if $res->[0] == HTTP_BAD_GATEWAY;

               $res;
           };
    MetaKGS::Upstream->new->to_app;
};

return $app if caller;

my $port = 5001;
my $host = '127.0.0.1';
my $version;

my $parser = Getopt::Long::Parser->new(
    config => [qw(posix_default no_ignore_case auto_help)],
);

$parser->getoptions(
    'p|port=i' => \$port,
    'host=s' => \$host,
    'version!' => \$version,
);

if ( $version ) {
    print "MetaKGS::Proxy: $MetaKGS::Upstream::VERSION";
    exit 0;
}

print "MetaKGS::Proxy: http://$host\:$port\n";

my $loader = Plack::Loader->load(
    'Starlet' => (
        port => $port,
        host => $host,
        max_workers => 0,
    )
);

$loader->run( $app );
